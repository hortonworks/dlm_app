---
swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: v1
  title: Data plane data store API
  description: |
    Data store exposes a REST api for allowing servicees and applications to store data as JSON objects and allows for CRUD and search operations


    All endpoints are accessible via https/http.


    ## Structure

    ### API envelope
    Every response is contained by an envelope.

    ```json
    {
        "result": {
            "code": 200
        },
        "data": {
            ...
        }
    }
    ```

    #### RESULT
    On errors result contains more meta information

    ```json
    {
        "result": {
            "error": "Exception/Error",
            "code": 400,
            "message": "..."
        }
    }
    ```

    #### DATA
    Result data - usually a JSON object or an array

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: api.datastore.dataplane
basePath: /v1
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json




################################################################################
#                                  Security                                    #
################################################################################

securityDefinitions:
  ApiSecurity:
    type: apiKey
    in: header
    name: API-KEY


security:
  - ApiSecurity: []



################################################################################
#                                  Definitions                                    #
################################################################################


definitions:
  Collection:
     type: object
     properties:
      created_time:
        type: integer
      name:
        type: string
  Count:
     type: object
     properties:
      count:
        type: integer



################################################################################
#                                  Paths                                    #
################################################################################

paths:
  /collections:
    get:
      summary: Get all data collections
      description: Returns a list containing all collections , no paging
      responses:
        '200':
          description: A list of collections
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Collection'
  /collection/{name}:
     get:
      summary: Describe a collection
      description: Gets data about a collection
      parameters:
        - name: name
          in: path
          description: String input for echo service
          required: true
          type: string
      responses:
        '200':
          description: The requested collection
          schema:
           $ref: '#/definitions/Collection'
     post:
      summary: Create a collection
      description: Creates a new collection
      parameters:
        - name: name
          in: path
          description: Name of the collection
          required: true
          type: string
      responses:
        '200':
          description: The requested collection
          schema:
           $ref: '#/definitions/Collection'
  /{collectionName}:
    get:
      summary: Get a collection
      description: Get all data from a collection
      parameters:
      - name: collectionName
        in: path
        description: Name of the collection
        required: true
        type: string
      - name: limit
        in: query
        description: row limit
        required: false
        type: integer
      - name: offset
        in: query
        description: start offset
        required: false
        type: integer
      responses:
        '200':
          description: The requested objects
          schema:
           type: object
    post:
      summary: Insert a new data object
      description: Insert a new data object
      parameters:
      - name: collectionName
        in: path
        description: Name of the collection
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: false
        schema:
            type: object
      responses:
        '200':
          description: The inserted object
          schema:
           type: object
  /{collectionName}/count:
    get:
      summary: Get number of objects
      description: Get Number of objects in a collection
      parameters:
      - name: collectionName
        in: path
        description: Name of the collection
        required: true
        type: string
      responses:
        '200':
          description: The requested objects
          schema:
           $ref: '#/definitions/Count'







