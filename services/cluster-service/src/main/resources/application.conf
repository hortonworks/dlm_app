#Application configuration

dp.services.db {
  service.uri = "http://localhost:9005"
  service.path = "/api/db"
}

dp.service.ambari.cluster.api.prefix = "/api/v1/clusters"
dp.service.ambari.status.check.timeout.secs = 19

# in Seconds
dp.services.cluster.sync.start.secs = 10
# in Minutes
dp.services.cluster.sync.interval.mins = 5
#Bind address for server
dp.services.cluster.http.host = "0.0.0.0"
#Port for server
dp.services.cluster.http.port = 9009


# Time to cache The Atlas API supplier
dp.services.cluster.http.atlas.endpoint.cache.secs = 60

#Make this false to stop running jobs
dp.services.cluster.run.jobs = false

#Atlas enpoints


dp.services.atlas {

  atlas.common.attributes = [{"name": "owner", "dataType": "string"}, {"name": "name", "dataType": "string"}]

  #Types to be accepted
  hive.accepted.types = ["string", "int", "long", "boolean", "date"]

  hive.search.query.base = "hive_table"

}


consul {
  #unique name
  serviceId = "clusters_01"
  #common name across instances
  serviceName = "clusters"
  service.tags = ["cluster-service"]
  service.port = 9009
  client.connect.failure.retry.secs = 5
  host = "localhost"
  port = 8500
}

gateway {
  ssl.enabled = false
  refresh.servers.secs = 60
}
