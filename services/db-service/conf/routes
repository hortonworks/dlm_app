# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#Users API

GET           /users                                           controllers.Users.all
POST          /users                                           controllers.Users.insert
GET           /users/:userId                                   controllers.Users.load(userId:Long)
DELETE        /users/:userId                                   controllers.Users.delete(userId:Long)

GET           /user/:username                                  controllers.Users.get(username)


#Roles API
GET           /roles                                           controllers.Roles.all
GET           /roles/:roleId                                   controllers.Roles.load(roleId:Long)
POST          /roles                                           controllers.Roles.add
POST          /user-role                                       controllers.Roles.addUserRole
GET           /user-role/user/:username                        controllers.Roles.getRolesForUser(username)

#Permissions API

GET           /permissions                                     controllers.Permissions.all
POST          /permissions                                     controllers.Permissions.add
GET           /permissions/user/:username                      controllers.Permissions.userPermissions(username)



#Locations
GET           /locations                                       controllers.Datalakes.getLocations
GET           /locations/:locationId                           controllers.Datalakes.loadLocation(locationId:Long)
DELETE        /locations/:locationId                           controllers.Datalakes.deleteLocation(locationId:Long)
POST          /locations                                       controllers.Datalakes.addLocation


#Datalakes API
GET           /datalakes                                       controllers.Datalakes.all
POST          /datalakes                                       controllers.Datalakes.add
GET           /datalakes/:datalakeId                           controllers.Datalakes.load(datalakeId:Long)
DELETE        /datalakes/:datalakeId                           controllers.Datalakes.delete(datalakeId:Long)

#Clusters API
GET           /clusters                                        controllers.Clusters.all
POST          /clusters                                        controllers.Clusters.add
GET           /clusters/:clusterId                             controllers.Clusters.load(clusterId:Long)
DELETE        /clusters/:clusterId                             controllers.Clusters.delete(clusterId:Long)

#Clusters API
GET           /cloud/clusters                                  controllers.CloudClusters.all
POST          /cloud/clusters                                  controllers.CloudClusters.add
GET           /cloud/clusters/:clusterId                       controllers.CloudClusters.load(clusterId:Long)
DELETE        /cloud/clusters/:clusterId                       controllers.CloudClusters.delete(clusterId:Long)

#Cluster services API

GET           /clusters/:clusterId/services                    controllers.ClusterServices.allWithCluster(clusterId:Long)
GET           /clusters/:datalakeId/services                    controllers.ClusterServices.allWithDatalake(datalakeId:Long)
POST          /datalakes/:clusterId/services                  controllers.ClusterServices.addWithCluster(clusterId:Long)
POST          /cluster/:datalakeId/services                     controllers.ClusterServices.addWithDatalake(datalakeId:Long)
GET           /clusters/:clusterId/service/:serviceId          controllers.ClusterServices.loadWithCluster(serviceId:Long,clusterId:Long)
GET           /datalakes/:datalakeId/service/:serviceId        controllers.ClusterServices.loadWithDatalake(serviceId:Long,datalakeId:Long)
DELETE        /services/:serviceId                             controllers.ClusterServices.delete(serviceId:Long)


#Clusters API
GET           /clusters                                        controllers.Clusters.all
POST          /clusters                                        controllers.Clusters.add
GET           /clusters/:clusterId                             controllers.Clusters.load(clusterId:Long)
DELETE        /clusters/:clusterId                             controllers.Clusters.delete(clusterId:Long)


#Workspaces API
GET           /workspaces                                        controllers.Workspaces.all
POST          /workspaces                                        controllers.Workspaces.insert
GET           /workspaces/:workspaceId                           controllers.Workspaces.load(workspaceId:Long)
DELETE        /workspaces/:workspaceId                           controllers.Workspaces.delete(workspaceId:Long)


#Asset workspace API
#Get assets for workspace
GET           /assets/workspace/:workspaceId                     controllers.AssetWorkspaces.assetsforWorkspace(workspaceId:Long)
POST           /assets/workspace                                 controllers.AssetWorkspaces.add



#Categories
GET           /categories                                      controllers.Categories.all
POST          /categories                                      controllers.Categories.insert
GET           /categories/:categoryId                          controllers.Categories.load(categoryId:Long)
DELETE        /categories/:categoryId                          controllers.Categories.delete(categoryId:Long)

#Skus API
GET           /skus                                            controllers.Skus.all
POST          /skus                                            controllers.Skus.insert
GET           /skus/:skuId                                     controllers.Skus.load(skuId: Long)
DELETE        /skus/:skuId                                     controllers.Skus.delete(skuId: Long)

#EnabledSkus API
GET           /enabledskus                                     controllers.EnabledSkus.all
POST          /enabledskus                                     controllers.EnabledSkus.insert
GET           /enabledskus/:skuId                              controllers.EnabledSkus.load(skuId: Long)
DELETE        /enabledskus/:skuId                              controllers.EnabledSkus.delete(skuId: Long)
