#This name will show up in Consul
spring.application.name=zuul
# Port at which the gateway is available
server.port=8762

spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.config.enabled=true

#Use client side LB
spring.cloud.consul.ribbon.enabled=true
spring.cloud.consul.discovery.preferIpAddress=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
ribbon.ConnectTimeout=3000
ribbon.ReadTimeout=60000

#This config does not seem to work well, For now attaching a Pre filter to throw out any non /api requests
zuul.ignoredServices='*'

#Ambari Dispatch endpoint
#This endpoint can be used to proxy Ambari API's with the call passing through cluster service
#The pattern for such a call is /api/clusters/:cluster_id/ambari/<The part after /cluster/clustername/ in the ambari call>
#Use this to call any Ambari API provided the cluster id in dataplane is provided

zuul.routes.cs.path=/api/clusters/**
zuul.routes.cs.serviceId=clusters

zuul.routes.db.path=/api/db/**
zuul.routes.db.serviceId=dpdb

zuul.routes.dp.path=/api/app/**
zuul.routes.dp.serviceId=dpapp
zuul.routes.dp.sensitiveHeaders=Cookie,Set-Cookie




#sso
#path to knox public key. eg /usr/certs/konx-signing.pem. In dev mode if empty value is given it is picked from resources folder.
signing.pub.key.path=

sso.cookie.name=hadoop-jwt
#sso cookie domain. #This should match with knox configuration if specified (see knoxsso.cookie.domain.suffix in KnoxSSO cookie provider)
#if knoxsso.cookie.domain.suffix is not present it means it is defaulted to the domain name with which you access the application.
#If left empty the domain is inferered from hostname of knox.url
sso.cookie.domain=
knox.url=https://dataplane:8443
knox.websso.path=/gateway/knoxsso/api/v1/websso
