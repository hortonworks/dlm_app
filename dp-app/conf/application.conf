# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

#General settings
DP_APP_HOME=""
scheduler.cluster.sync.interval = 1  // minutes
apicall.timeout=5000 //in millis

#Database service
dp.services.db.service.uri = "http://localhost:8762/api/db"
dp.services.cluster.service.uri = "http://localhost:8762/api/cluster"



dp.services {
  db.service.uri = "http://localhost:9005"
  db.service.path = "/api/db"
  cluster.service.uri = "http://localhost:9009"
  cluster.service.path = "/api/clusters"
}

consul {
  #unique name
  serviceId = "dpapp_01"
  #common name across instances
  serviceName = "dpapp"
  service.tags = ["app-service"]
  service.port = 9000
  client.connect.failure.retry.secs = 5
  host = "localhost"
  port = 8500
}

gateway {
  ssl.enabled = false
  refresh.servers.secs = 60
}

#sso
signing.pub.key.path=${DP_APP_HOME}"/conf/cert/knox-signing.pem"
sso.cookie.name="hadoop-jwt"
knox.url="https://localhost:8443"
knox.websso.path="/gateway/knoxsso/api/v1/websso"

  #Authentication

auth.users {

  seed:[{
    user:"admin"
    pass:"admin"
    type:"SUPERUSER",
    admin:"true"
  },
    {
      user:"analyst"
      pass:"analyst"
      type:"ANALYSTADMIN",
      admin:"false"
    },
    {
      user:"infra"
      pass:"infra"
      type:"INFRAADMIN"
      admin:"false"
    },
    {
      user:"steward"
      pass:"steward"
      type:"ANALYSTADMIN"
      admin:"false"
    }]

  }



  #Atlas
  #Reload all tables fom the cache
  atlas.api.tableCache.reload.minutes=5
  atlas.api.tableCache.limit=10000
  #Expire table from cache
  atlas.api.tableCache.time.minutes=15

  include "solr.conf"
