# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                      controllers.Default.redirect(to = "/ui")
# Responds with 404 Not Found
GET         /ui                                    controllers.Application.index
GET         /ui/*path                              controllers.Application.route(path)

#auth calls
POST        /auth/login                            controllers.Authentication.login

#api
POST        /api/clusters                          controllers.Cluster.create
GET         /api/clusters                          controllers.Cluster.list
PUT         /api/clusters                          controllers.Cluster.update

PUT         /api/datacenters                       controllers.Datacenter.create
GET         /api/datacenters                       controllers.Datacenter.list
GET         /api/datacenters/:dcName/detail        controllers.Datacenter.getClusters(dcName)

#Atlas
#TODO:fix endpoints
GET         /api/datacenters/atlas/tables          controllers.AtlasHive.getAllTables(clusterHost,dc,cached)
GET         /api/datacenters/atlas/table           controllers.AtlasHive.getTableDefinition(clusterHost,dc,table,cached)
GET         /api/datacenters/atlas/entity          controllers.AtlasHive.getEntity(clusterHost,dc,guid)
GET         /api/datacenters/atlas/lineage         controllers.AtlasHive.getLineage(clusterHost,dc,guid)
GET         /api/datacenters/atlas/audit           controllers.AtlasHive.getAudit(clusterHost,dc,guid)

#Hbase
GET         /api/datacenters/hbase/tables          controllers.AtlasHBase.getAllTables(clusterHost,dc,cached)
GET         /api/datacenters/hbase/table           controllers.AtlasHBase.getTableDefinition(clusterHost,dc,table,cached)
GET         /api/datacenters/hbase/entity          controllers.AtlasHBase.getEntity(clusterHost,dc,guid)
GET         /api/datacenters/Hbase/audit           controllers.AtlasHBase.getAudit(clusterHost,dc,guid)



# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                          controllers.Assets.versioned(path="/public", file: Asset)
