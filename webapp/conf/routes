# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                      controllers.Default.redirect(to = "/ui")
# Responds with 404 Not Found
GET         /ui                                    controllers.Application.index
GET         /ui/*path                              controllers.Application.route(path)

#auth calls
POST        /auth/login                            controllers.Authentication.login

#api
POST        /api/clusters                          controllers.ClusterController.create
GET         /api/clusters                          controllers.ClusterController.list
PUT         /api/clusters                          controllers.ClusterController.update
GET         /api/clusters/:id                      controllers.ClusterController.get(id)

PUT         /api/datacenters                       controllers.DataCenterController.create
GET         /api/datacenters                       controllers.DataCenterController.list
GET         /api/datacenters/:dcName/detail        controllers.DataCenterController.getClusters(dcName)
GET         /api/datacenters/:id                   controllers.DataCenterController.get(id)

GET         /api/backup-policies                   controllers.BackupPolicyController.list
POST        /api/backup-policies                   controllers.BackupPolicyController.create
# PUT         /api/backup-policies/:id               controllers.BackupPolicyController.update(id)
GET         /api/backup-policies/:id               controllers.BackupPolicyController.get(id)

#Atlas
#TODO:fix endpoints
GET         /api/datacenters/atlas/tables          controllers.Atlas.getAllTables(clusterHost,dc,cached)
GET         /api/datacenters/atlas/table           controllers.Atlas.getTableDefinition(clusterHost,dc,table,cached)
GET         /api/datacenters/atlas/entity          controllers.Atlas.getEntity(clusterHost,dc,guid)
GET         /api/datacenters/atlas/lineage         controllers.Atlas.getLineage(clusterHost,dc,guid)
GET         /api/datacenters/atlas/audit         controllers.Atlas.getAudit(clusterHost,dc,guid)



# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                          controllers.Assets.versioned(path="/public", file: Asset)
